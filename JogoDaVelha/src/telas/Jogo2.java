package telas;

import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
public class Jogo2 extends javax.swing.JFrame {
    int quantidade;
    int i = 0;
    /**
     * Creates new form Jogo2
     */
    public Jogo2() {
        initComponents();
        darFoco();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblJogador1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblJogador2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        TF1 = new javax.swing.JTextField();
        TF2 = new javax.swing.JTextField();
        TF3 = new javax.swing.JTextField();
        TF5 = new javax.swing.JTextField();
        TF6 = new javax.swing.JTextField();
        TF7 = new javax.swing.JTextField();
        TF8 = new javax.swing.JTextField();
        TF9 = new javax.swing.JTextField();
        TF4 = new javax.swing.JTextField();
        btnProx = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        btnClean = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        lblJogador1.setText("Player 1");

        jLabel2.setText("X");

        lblJogador2.setText("Player 2");

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(0));

        TF1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TF1MousePressed(evt);
            }
        });
        TF1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF1ActionPerformed(evt);
            }
        });

        TF2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TF2MousePressed(evt);
            }
        });
        TF2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF2ActionPerformed(evt);
            }
        });

        TF3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TF3MousePressed(evt);
            }
        });
        TF3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF3ActionPerformed(evt);
            }
        });

        TF5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TF5MousePressed(evt);
            }
        });
        TF5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF5ActionPerformed(evt);
            }
        });

        TF6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TF6MousePressed(evt);
            }
        });
        TF6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF6ActionPerformed(evt);
            }
        });

        TF7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TF7MousePressed(evt);
            }
        });
        TF7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF7ActionPerformed(evt);
            }
        });

        TF8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TF8MousePressed(evt);
            }
        });
        TF8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF8ActionPerformed(evt);
            }
        });

        TF9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TF9MousePressed(evt);
            }
        });
        TF9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF9ActionPerformed(evt);
            }
        });

        TF4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TF4MousePressed(evt);
            }
        });
        TF4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TF7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(TF1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TF4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(TF2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TF3, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(TF8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(TF5, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TF6, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(TF9, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TF3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TF1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TF2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TF5, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TF6, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TF4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TF7, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TF8, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TF9, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnProx.setText("Próximo jogo");
        btnProx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProxActionPerformed(evt);
            }
        });

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });
        btnVoltar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnVoltarKeyPressed(evt);
            }
        });

        btnClean.setText("Limpar");
        btnClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnVoltar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClean)
                        .addGap(47, 47, 47)
                        .addComponent(btnProx))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addComponent(lblJogador1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblJogador2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblJogador1)
                    .addComponent(jLabel2)
                    .addComponent(lblJogador2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProx)
                    .addComponent(btnVoltar)
                    .addComponent(btnClean))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void limparVariaveis(){
    
        v.o = 0;
        v.x = 0;
        
    }
    private void btnProxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProxActionPerformed
        try {
            int vencedor = quantidadeVencedor(),inicial = quantidadeArquivo(),perdedor = quantidadePerdedor();
            TF1.setText("");
            TF2.setText("");
            TF3.setText("");
            TF4.setText("");
            TF5.setText("");
            TF6.setText("");
            TF7.setText("");
            TF8.setText("");
            TF9.setText("");
            
            limparVariaveis();
            
            if(inicial == 2 && vencedor == 1){      // Condição para 2 jogadores
                apagarTxt();
                inicial = quantidadeArquivo();
                vencedor = quantidadeVencedor();
            }
            if(vencedor == 1 && inicial == 0 ){  ;// Gerador do podium para 2 jogadores
                Podium podium = new Podium();
                podium.setLocationRelativeTo(null);
                podium.setVisible(true);
                this.dispose();
            }
            if(inicial == 4 && vencedor == 1){  // primeira entrada 4 jogadores
                apagarTxt();
                lblJogador1.setText(lerJogador(0));
                lblJogador2.setText(lerJogador(1));
                inicial = quantidadeArquivo();
                vencedor = quantidadeVencedor();
            }
            if(inicial == 2 && vencedor == 2){  // segunda entrada 4 jogadores
                apagarTxt();
                lblJogador1.setText(lerJogador(0));
                lblJogador2.setText(lerJogador(1));
                inicial = quantidadeArquivo();
                vencedor = quantidadeVencedor();
                perdedor = quantidadePerdedor();
            }
            if(inicial == 0 && vencedor == 3 && perdedor == 3){ //Gerador de podium para 4 jogadores
                apagarGanhador();
                Podium podium = new Podium();
                podium.setLocationRelativeTo(null);
                podium.setVisible(true);
                this.dispose();
            }
            if(inicial == 8 && vencedor == 1){  // primeira entrada 8 jogadores
                apagarTxt();
                lblJogador1.setText(lerJogador(0));
                lblJogador2.setText(lerJogador(1));
                inicial = quantidadeArquivo();
                vencedor = quantidadeVencedor();
            }
            if(inicial == 6 && vencedor == 2){  // segunda entrada 8 jogadores
                apagarTxt();
                lblJogador1.setText(lerJogador(0));
                lblJogador2.setText(lerJogador(1));
                inicial = quantidadeArquivo();
                vencedor = quantidadeVencedor();
            }
            if(inicial == 4 && vencedor == 3){  // terceira entrada 8 jogadores
                apagarTxt();
                lblJogador1.setText(lerJogador(0));
                lblJogador2.setText(lerJogador(1));
                inicial = quantidadeArquivo();
                vencedor = quantidadeVencedor();
            }
            if(inicial == 2 && vencedor == 4){  // quarta entrada 8 jogadores
                apagarTxt();
                lblJogador1.setText(lerJogador(0));
                lblJogador2.setText(lerJogador(1));
                inicial = quantidadeArquivo();
                vencedor = quantidadeVencedor();
            }
            if(inicial == 0 && vencedor == 5){  // rodada dos ganhadores 8 jogadores
                apagarGanhador();
                lblJogador1.setText(lerJogador(0));
                lblJogador2.setText(lerJogador(1));
                inicial = quantidadeArquivo();
                vencedor = quantidadeVencedor();
                
            }
            if(inicial == 0 && vencedor == 4 && perdedor == 6){  // primeira entrada 8 jogadores
                apagarGanhador();
                lblJogador1.setText(lerJogador(0));
                lblJogador2.setText(lerJogador(1));
                inicial = quantidadeArquivo();
                vencedor = quantidadeVencedor();
            }
            if(inicial == 0 && vencedor == 3 && perdedor == 7){
                apagarGanhador();
                Podium podium = new Podium();
                podium.setLocationRelativeTo(null);
                podium.setVisible(true);
                this.dispose();
            }
            }catch (IOException ex) {
                Logger.getLogger(Jogo2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnProxActionPerformed

    private void TF4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF4ActionPerformed
    
    public void abrirPlayer1(String nome){
        lblJogador1.setText(nome);
    }
    public void abrirPlayer2(String nome){
        lblJogador2.setText(nome);
    }
    private void TF4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TF4MousePressed
        // TODO add your handling code here:
        if(TF4.getText().trim().equals("")){
            if(v.x > v.o){
                TF4.setText(v.bolinha);
                v.o++;
            }
            else{
                TF4.setText(v.xis);
                v.x++;
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Você não pode inserir aqui. Escolha outro campo");
        }
        try {
            CheckWin();
        } catch (IOException ex) {
            Logger.getLogger(Jogo2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_TF4MousePressed

    private void TF9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF9ActionPerformed

    private void TF9MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TF9MousePressed
        // TODO add your handling code here:
        if(TF9.getText().trim().equals("")){
            if(v.x > v.o){
                TF9.setText(v.bolinha);
                v.o++;
            }
            else{
                TF9.setText(v.xis);
                v.x++;
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Você não pode inserir aqui. Escolha outro campo");
        }
        try {
            CheckWin();
        } catch (IOException ex) {
            Logger.getLogger(Jogo2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_TF9MousePressed

    private void TF8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF8ActionPerformed

    private void TF8MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TF8MousePressed
        // TODO add your handling code here:
        if(TF8.getText().trim().equals("")){
            if(v.x > v.o){
                TF8.setText(v.bolinha);
                v.o++;
            }
            else{
                TF8.setText(v.xis);
                v.x++;
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Você não pode inserir aqui. Escolha outro campo");
        }
        try {
            CheckWin();
        } catch (IOException ex) {
            Logger.getLogger(Jogo2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_TF8MousePressed

    private void TF7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF7ActionPerformed

    private void TF7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TF7MousePressed
        // TODO add your handling code here:
        if(TF7.getText().trim().equals("")){
            if(v.x > v.o){
                TF7.setText(v.bolinha);
                v.o++;
            }
            else{
                TF7.setText(v.xis);
                v.x++;
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Você não pode inserir aqui. Escolha outro campo");
        }
        try {
            CheckWin();
        } catch (IOException ex) {
            Logger.getLogger(Jogo2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_TF7MousePressed

    private void TF6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF6ActionPerformed

    private void TF6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TF6MousePressed
        // TODO add your handling code here:
        if(TF6.getText().trim().equals("")){
            if(v.x > v.o){
                TF6.setText(v.bolinha);
                v.o++;
            }
            else{
                TF6.setText(v.xis);
                v.x++;
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Você não pode inserir aqui. Escolha outro campo");
        }
        try {
            CheckWin();
        } catch (IOException ex) {
            Logger.getLogger(Jogo2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_TF6MousePressed

    private void TF5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF5ActionPerformed

    private void TF5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TF5MousePressed
        // TODO add your handling code here:
        if(TF5.getText().trim().equals("")){
            if(v.x > v.o){
                TF5.setText(v.bolinha);
                v.o++;
            }
            else{
                TF5.setText(v.xis);
                v.x++;
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Você não pode inserir aqui. Escolha outro campo");
        }
        try {
            CheckWin();
        } catch (IOException ex) {
            Logger.getLogger(Jogo2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_TF5MousePressed

    private void TF3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF3ActionPerformed

    private void TF3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TF3MousePressed
        // TODO add your handling code here:
        if(TF3.getText().trim().equals("")){
            if(v.x > v.o){
                TF3.setText(v.bolinha);
                v.o++;
            }
            else{
                TF3.setText(v.xis);
                v.x++;
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Você não pode inserir aqui. Escolha outro campo");
        }
        try {
            CheckWin();
        } catch (IOException ex) {
            Logger.getLogger(Jogo2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_TF3MousePressed

    private void TF2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF2ActionPerformed

    private void TF2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TF2MousePressed
        // TODO add your handling code here:
        if(TF2.getText().trim().equals("")){
            if(v.x > v.o){
                TF2.setText(v.bolinha);
                v.o++;
            }
            else{
                TF2.setText(v.xis);
                v.x++;
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Você não pode inserir aqui. Escolha outro campo");
        }
        try {
            CheckWin();
        } catch (IOException ex) {
            Logger.getLogger(Jogo2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_TF2MousePressed

    private void TF1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF1ActionPerformed

    private void TF1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TF1MousePressed
        // TODO add your handling code here:
        if(TF1.getText().trim().equals("")){
            if(v.x > v.o){
                TF1.setText(v.bolinha);
                v.o++;
            }
            else{
                TF1.setText(v.xis);
                v.x++;
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Você não pode inserir aqui. Escolha outro campo");
        }
        try {
            CheckWin();
        } catch (IOException ex) {
            Logger.getLogger(Jogo2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_TF1MousePressed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        try {
            TelaCadastro tela = new TelaCadastro();
            tela.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(Jogo2.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnVoltarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnVoltarKeyPressed
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_NUMPAD7:
                if(TF1.getText().trim().equals("")){
                    if(v.x > v.o){
                        TF1.setText(v.bolinha);
                        v.o++;
                    }
                    else{
                        TF1.setText(v.xis);
                        v.x++;
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null,"Você não pode inserir aqui. Escolha outro campo");
                }
                try {
                    CheckWin();
                } catch (IOException ex) {
                    Logger.getLogger(Jogo2.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case KeyEvent.VK_NUMPAD8:
                if(TF2.getText().trim().equals("")){
                    if(v.x > v.o){
                        TF2.setText(v.bolinha);
                        v.o++;
                    }
                    else{
                        TF2.setText(v.xis);
                        v.x++;
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null,"Você não pode inserir aqui. Escolha outro campo");
                }
                try {
                    CheckWin();
                } catch (IOException ex) {
                    Logger.getLogger(Jogo2.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case KeyEvent.VK_NUMPAD9:
                if(TF3.getText().trim().equals("")){
                    if(v.x > v.o){
                        TF3.setText(v.bolinha);
                        v.o++;
                    }
                    else{
                        TF3.setText(v.xis);
                        v.x++;
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null,"Você não pode inserir aqui. Escolha outro campo");
                }
                try {
                    CheckWin();
                } catch (IOException ex) {
                    Logger.getLogger(Jogo2.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case KeyEvent.VK_NUMPAD4:
                if(TF4.getText().trim().equals("")){
                    if(v.x > v.o){
                        TF4.setText(v.bolinha);
                        v.o++;
                    }
                    else{
                        TF4.setText(v.xis);
                        v.x++;
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null,"Você não pode inserir aqui. Escolha outro campo");
                }
                try {
                    CheckWin();
                } catch (IOException ex) {
                    Logger.getLogger(Jogo2.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case KeyEvent.VK_NUMPAD5:
                if(TF5.getText().trim().equals("")){
                    if(v.x > v.o){
                        TF5.setText(v.bolinha);
                        v.o++;
                    }
                    else{
                        TF5.setText(v.xis);
                        v.x++;
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null,"Você não pode inserir aqui. Escolha outro campo");
                }
                try {
                    CheckWin();
                } catch (IOException ex) {
                    Logger.getLogger(Jogo2.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case KeyEvent.VK_NUMPAD6:
                if(TF6.getText().trim().equals("")){
                    if(v.x > v.o){
                        TF6.setText(v.bolinha);
                        v.o++;
                    }
                    else{
                        TF6.setText(v.xis);
                        v.x++;
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null,"Você não pode inserir aqui. Escolha outro campo");
                }
                try {
                    CheckWin();
                } catch (IOException ex) {
                    Logger.getLogger(Jogo2.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case KeyEvent.VK_NUMPAD1:
                if(TF7.getText().trim().equals("")){
                    if(v.x > v.o){
                        TF7.setText(v.bolinha);
                        v.o++;
                    }
                    else{
                        TF7.setText(v.xis);
                        v.x++;
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null,"Você não pode inserir aqui. Escolha outro campo");
                }
                try {
                    CheckWin();
                } catch (IOException ex) {
                    Logger.getLogger(Jogo2.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case KeyEvent.VK_NUMPAD2:
                if(TF8.getText().trim().equals("")){
                    if(v.x > v.o){
                        TF8.setText(v.bolinha);
                        v.o++;
                    }
                    else{
                        TF8.setText(v.xis);
                        v.x++;
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null,"Você não pode inserir aqui. Escolha outro campo");
                }
                try {
                    CheckWin();
                } catch (IOException ex) {
                    Logger.getLogger(Jogo2.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case KeyEvent.VK_NUMPAD3:
                if(TF9.getText().trim().equals("")){
                    if(v.x > v.o){
                        TF9.setText(v.bolinha);
                        v.o++;
                    }
                    else{
                        TF9.setText(v.xis);
                        v.x++;
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null,"Você não pode inserir aqui. Escolha outro campo");
                }
                try {
                    CheckWin();
                } catch (IOException ex) {
                    Logger.getLogger(Jogo2.class.getName()).log(Level.SEVERE, null, ex);
                }
                break; 
            default:
                break;
        }
    }//GEN-LAST:event_btnVoltarKeyPressed

    private void btnCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
        TF1.setText("");
        TF2.setText("");
        TF3.setText("");
        TF4.setText("");
        TF5.setText("");
        TF6.setText("");
        TF7.setText("");
        TF8.setText("");
        TF9.setText("");
        
        darFoco();
    }//GEN-LAST:event_btnCleanActionPerformed
    public void darFoco(){
        btnVoltar.requestFocus();
    }
    
    Variaveis v = new Variaveis();
    
    public String lerJogador(int i) throws FileNotFoundException, IOException{
        FileReader fr = new FileReader("entrada.txt");
        BufferedReader br = new BufferedReader(fr);
        List lista = new ArrayList();
        String linha = br.readLine();
        
        if(linha == null){
            FileReader fr2 = new FileReader("ganhador.txt");
            BufferedReader br2 = new BufferedReader(fr2);
            String linha2 = br2.readLine();
            while(linha2 != null){
                lista.add(linha2);
                linha2 = br2.readLine();
            }
            br2.close();
        }
        while(linha != null){
            lista.add(linha);
            linha = br.readLine();
        }
        br.close();
        
        Iterator it = lista.iterator();
        
        return lista.get(i).toString();
    }
    public void guardarVencedor(String Jogador) throws IOException{
        FileWriter fw = new FileWriter("ganhador.txt",true);
        PrintWriter pw = new PrintWriter(fw);
        
        pw.println(Jogador);
        pw.close();
    }
    public void guardarPerdedor(String Jogador) throws IOException{
        FileWriter fw = new FileWriter("perdedor.txt",true);
        PrintWriter pw = new PrintWriter(fw);
        
        pw.println(Jogador);
        pw.close();
    }
    public void apagarTxt() throws FileNotFoundException, IOException{
        FileReader fr = new FileReader("entrada.txt");
        BufferedReader br = new BufferedReader(fr);
        
        String linha = br.readLine();
        ArrayList <String> salvar = new ArrayList();
        int cont = 0;
        while(linha != null){
            if(cont != 0 && cont != 1){
               salvar.add(linha);
            }
            cont+=1;
           linha = br.readLine();
        }
            
        br.close();
        fr.close();
        
        FileWriter fw2 = new FileWriter("entrada.txt",true);
        fw2.close();
        
        FileWriter fw = new FileWriter("entrada.txt");
        BufferedWriter pw = new BufferedWriter(fw);
        for(int i= 0; i < salvar.size();i++){
            pw.write(salvar.get(i));
            pw.newLine();
        }
        pw.close();
        fw.close();
    }
    public void apagarGanhador() throws FileNotFoundException, IOException{
        FileReader fr = new FileReader("ganhador.txt");
        BufferedReader br = new BufferedReader(fr);
        
        String linha = br.readLine();
                
        ArrayList <String> salvar = new ArrayList();
        int cont = 0;
        while(linha != null){
            if(cont != 0 && cont != 1){
               salvar.add(linha);
            }
            cont+=1;
           linha = br.readLine();
        }
        
        br.close();
        fr.close();
        
        FileWriter fw2 = new FileWriter("ganhador.txt",true);
        fw2.close();
        
        FileWriter fw = new FileWriter("ganhador.txt");
        BufferedWriter pw = new BufferedWriter(fw);
        for(int i= 0; i < salvar.size();i++){
            pw.write(salvar.get(i));
            pw.newLine();
        }
        pw.close();
        fw.close();
    }
    public int quantidadeArquivo() throws FileNotFoundException, IOException{
        FileReader fr = new FileReader("entrada.txt");
        BufferedReader br = new BufferedReader(fr);
        int num = 0;
        String linha = br.readLine();
       
        while(linha != null){
            num+=1;
            linha = br.readLine();
        }
        br.close();
        return num;
    }
     public int quantidadeVencedor() throws FileNotFoundException, IOException{
        FileReader fr = new FileReader("ganhador.txt");
        BufferedReader br = new BufferedReader(fr);
        int num = 0;
        String linha = br.readLine();
       
        while(linha != null){
            num+=1;
            linha = br.readLine();
        }
        br.close();
        return num;
    }
    public int quantidadePerdedor() throws FileNotFoundException, IOException{
        FileReader fr = new FileReader("perdedor.txt");
        BufferedReader br = new BufferedReader(fr);
        int num = 0;
        String linha = br.readLine();
       
        while(linha != null){
            num+=1;
            linha = br.readLine();
        }
        br.close();
        return num;
    }
     
    private void CheckWin() throws FileNotFoundException, IOException{
        
        String aux1, aux2, aux3;
        String aux4, aux5, aux6;
        String aux7, aux8, aux9;

        aux1 = TF1.getText(); aux2 = TF2.getText(); aux3 = TF3.getText();
        aux4 = TF4.getText(); aux5 = TF5.getText(); aux6 = TF6.getText();
        aux7 = TF7.getText(); aux8 = TF8.getText(); aux9 = TF9.getText();

        darFoco();
        String jogador1 = lerJogador(0);
        String jogador2 = lerJogador(1);

        if(aux1.equals(v.xis) && aux2.equals(v.xis) && aux3.equals(v.xis)){
            JOptionPane.showMessageDialog(null,"Vencedor: "+jogador1);
            guardarVencedor(jogador1);
            guardarPerdedor(jogador2);
            btnProx.doClick();
        }
        else if(aux1.equals(v.xis) && aux4.equals(v.xis) && aux7.equals(v.xis)){
            JOptionPane.showMessageDialog(null,"Vencedor! "+jogador1) ;
            guardarVencedor(jogador1);
            guardarPerdedor(jogador2);
            btnProx.doClick();
        }
        else if(aux1.equals(v.xis) && aux5.equals(v.xis) && aux9.equals(v.xis)){
            JOptionPane.showMessageDialog(null, "Vencedor! "+jogador1);
            guardarVencedor(jogador1);
            guardarPerdedor(jogador2);
            btnProx.doClick();
        }
        else if(aux2.equals(v.xis) && aux5.equals(v.xis) && aux8.equals(v.xis)){
            JOptionPane.showMessageDialog(null, "Vencedor! "+jogador1);
            guardarVencedor(jogador1);
            guardarPerdedor(jogador2);
            btnProx.doClick();
        }
        else if(aux3.equals(v.xis) && aux6.equals(v.xis) && aux9.equals(v.xis)){
            JOptionPane.showMessageDialog(null, "Vencedor! "+jogador1);
            guardarVencedor(jogador1);
            guardarPerdedor(jogador2);
            btnProx.doClick();
        }
        else if(aux3.equals(v.xis) && aux5.equals(v.xis) && aux7.equals(v.xis)){
            JOptionPane.showMessageDialog(null, "Vencedor! "+jogador1);
            guardarVencedor(jogador1);
            guardarPerdedor(jogador2);
            btnProx.doClick();
        }
        else if(aux4.equals(v.xis) && aux5.equals(v.xis) && aux6.equals(v.xis)){
            JOptionPane.showMessageDialog(null, "Vencedor! "+jogador1);
            guardarVencedor(jogador1);
            guardarPerdedor(jogador2);
            btnProx.doClick();
        }
        else if(aux7.equals(v.xis) && aux8.equals(v.xis) && aux9.equals(v.xis)){
            JOptionPane.showMessageDialog(null, "Vencedor! "+jogador1);
            guardarVencedor(jogador1);
            guardarPerdedor(jogador2);
            btnProx.doClick();
        }

        // CHECK PARA JOGADOR O
        else if(aux1.equals(v.bolinha) && aux2.equals(v.bolinha) && aux3.equals(v.bolinha)){
            JOptionPane.showMessageDialog(null, "Vencedor! "+jogador2);
            guardarVencedor(jogador2);
            guardarPerdedor(jogador1);
            btnProx.doClick();
        }
        else if(aux1.equals(v.bolinha) && aux4.equals(v.bolinha) && aux7.equals(v.bolinha)){
            JOptionPane.showMessageDialog(null, "Vencedor! "+jogador2);
            guardarVencedor(jogador2);
            guardarPerdedor(jogador1);
            btnProx.doClick();
        }
        else if(aux1.equals(v.bolinha) && aux5.equals(v.bolinha) && aux9.equals(v.bolinha)){
            JOptionPane.showMessageDialog(null, "Vencedor! "+jogador2);
            guardarVencedor(jogador2);
            guardarPerdedor(jogador1);
            btnProx.doClick();
        }
        else if(aux2.equals(v.bolinha) && aux5.equals(v.bolinha) && aux8.equals(v.bolinha)){
            JOptionPane.showMessageDialog(null, "Vencedor! "+jogador2);
            guardarVencedor(jogador2);
            guardarPerdedor(jogador1);
            btnProx.doClick();
        }
        else if(aux3.equals(v.bolinha) && aux6.equals(v.bolinha) && aux9.equals(v.bolinha)){
            JOptionPane.showMessageDialog(null,"Vencedor! "+jogador2);
            guardarVencedor(jogador2);
            guardarPerdedor(jogador1);
            btnProx.doClick();
        }
        else if(aux3.equals(v.bolinha) && aux5.equals(v.bolinha) && aux7.equals(v.bolinha)){
            JOptionPane.showMessageDialog(null, "Vencedor! "+jogador2);
            guardarVencedor(jogador2);
            guardarPerdedor(jogador1);
            btnProx.doClick();
        }
        else if(aux4.equals(v.bolinha) && aux5.equals(v.bolinha) && aux6.equals(v.bolinha)){
            JOptionPane.showMessageDialog(null, "Vencedor! "+jogador2);
            guardarVencedor(jogador2);
            guardarPerdedor(jogador1);
            btnProx.doClick();
        }
        else if(aux7.equals(v.bolinha) && aux8.equals(v.bolinha) && aux9.equals(v.bolinha)){
            JOptionPane.showMessageDialog(null, "Vencedor! "+jogador2);
            guardarVencedor(jogador2);
            guardarPerdedor(jogador1);
            btnProx.doClick();
        }
        else if(v.o == 4 && v.x == 5){
            JOptionPane.showMessageDialog(null, "Deu Velha! =/" );
            TF1.setText("");
            TF2.setText("");
            TF3.setText("");
            TF4.setText("");
            TF5.setText("");
            TF6.setText("");
            TF7.setText("");
            TF8.setText("");
            TF9.setText("");
            limparVariaveis();
            darFoco();

        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Jogo2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Jogo2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Jogo2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Jogo2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new Jogo2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TF1;
    private javax.swing.JTextField TF2;
    private javax.swing.JTextField TF3;
    private javax.swing.JTextField TF4;
    private javax.swing.JTextField TF5;
    private javax.swing.JTextField TF6;
    private javax.swing.JTextField TF7;
    private javax.swing.JTextField TF8;
    private javax.swing.JTextField TF9;
    private javax.swing.JButton btnClean;
    private javax.swing.JButton btnProx;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblJogador1;
    private javax.swing.JLabel lblJogador2;
    // End of variables declaration//GEN-END:variables
}
